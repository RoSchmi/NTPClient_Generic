{
  "name": "NTPClient_Generic",
  "version": "3.7.4",
  "keywords": "timing, device, control, communication, iot, ntp, rtc, wifi, wifinina, ethernet, time, rp2040, nano-rp2040-connect, SAM DUE, SAMD, nRF52, STM32, ESP32, ESP8266, wt32-eth01, rtl8720, rpi-pico",
  "description": "Library for NTPClient to connect to an NTP time-server. Get time from a NTP time-server and keep it in sync. For ESP8266/ESP32, WT32-ETH01 (ESP32 + LAN8720), nRF52, SAMD21/SAMD51, STM32F/L/H/G/WB/MP1, Teensy, RTL8720DN, RP2040-based (Nano_RP2040_Connect, RASPBERRY_PI_PICO) boards, etc. besides AVR, using ESP WiFi, WiFiNINA, Ethernet W5x00, ENC28J60, LAN8742A, ESP8266/ESP32 AT-command WiFi",
  "authors":
  [
    {
      "name": "Fabrice Weinberg",
      "email": "fabrice@weinberg.me"
    },
    {
      "name":  "Khoi Hoang",
      "url":   "https://github.com/khoih-prog",
      "email": "khoih-prog@gmail.com",
      "maintainer": true
    }  
  ],
  "repository":
  {
    "type": "git",
    "url": "https://github.com/khoih-prog/NTPClient_Generic.git"
  },
  "homepage": "https://github.com/khoih-prog/NTPClient_Generic",
  "export": {
    "exclude": [
      "linux",
      "extras",
      "tests"
    ]
  },
  "dependencies": [
    {
      "owner": "paulstoffregen",
      "name": "Time",
      "version": ">=1.6.1",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "Timezone_Generic",
      "version": ">=1.10.0",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "DS323x_Generic",
      "version": ">=1.3.1",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "FlashStorage_SAMD",
      "version": ">=1.3.2",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "FlashStorage_STM32",
      "version": ">=1.2.0",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "FlashStorage_STM32F1",
      "version": ">=1.1.0",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "FlashStorage_RTL8720",
      "version": ">=1.1.0",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "WiFiNINA_Generic",
      "version": ">=1.8.14-3",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "EthernetWebServer",
      "version": ">=2.1.3",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "EthernetWebServer_STM32",
      "version": ">=1.4.1",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "WiFiWebServer",
      "version": ">=1.8.0",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "WebServer_WT32_ETH01",
      "version": ">=1.4.1",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "WiFiWebServer_RTL8720",
      "version": ">=1.1.1",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "ESP8266_AT_WebServer",
      "version": ">=1.5.4",
      "platforms": ["*"]
    },
    {
      "owner": "stm32duino",
      "name": "STM32duino LwIP",
      "version": ">=2.1.2",
      "platforms": ["ststm32"]
    },
    {
      "owner": "stm32duino",
      "name": "STM32Ethernet",
      "version": ">=1.2.0",
      "platforms": ["ststm32"]
    },
    {
      "owner": "stm32duino",
      "name": "STM32duino RTC",
      "version": ">=1.2.0",
      "platforms": ["ststm32"]
    },
    {
      "owner": "uipethernet",
      "name": "UIPEthernet",
      "version": ">=2.0.11",
      "platforms": ["*"]
    },
    {
      "owner": "jandrassy",
      "name": "EthernetENC",
      "version": ">=2.0.2",
      "platforms": ["*"]
    },
    {
      "owner": "jandrassy",
      "name": "WiFiEspAT",
      "version": ">=1.3.2",
      "platforms": ["*"]
    },
    {
      "owner": "khoih-prog",
      "name": "Ethernet_Generic",
      "version": "^2.1.0"
    },
    {
      "owner": "ssilverman",
      "name": "QNEthernet",
      "version": ">=0.14.0",
      "platforms": ["teensy"]
    }
  ],
  "license": "MIT",
  "frameworks": "*",
  "platforms": "*",
  "examples": "examples/*/*/*.ino",
  "headers": ["NTPClient_Generic.h", "NTPClient_Generic.hpp"]
  
}
